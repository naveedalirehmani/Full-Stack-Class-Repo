{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nfunction useFetch(url) {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(loading);\n  useEffect(() => {\n    const controller = new AbortController();\n    setLoading(true);\n    async function fetchData() {\n      try {\n        const response = await fetch(url, {\n          signal: controller.signal\n        });\n        const data = await response.json();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        if (error.name === 'AbortError') {\n          console.log('Fetch was aborted');\n        } else {\n          setError(error);\n        }\n        setLoading(false);\n      }\n    }\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n_s(useFetch, \"v5inua6mCP5CN8A+E7ULWpnNGvM=\");\nexport default useFetch;","map":{"version":3,"names":["React","useState","useEffect","useFetch","url","data","setData","loading","setLoading","error","setError","console","log","controller","AbortController","fetchData","response","fetch","signal","json","name","abort"],"sources":["/home/xuba/Desktop/clone-code/fullStackClassRepo/src/hooks/custom/useFetch.jsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\n\nfunction useFetch(url) {\n    \n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    console.log(loading)\n    useEffect(() => {\n      const controller = new AbortController();\n      setLoading(true)\n  \n      async function fetchData() {\n        try {\n          const response = await fetch(url, { signal: controller.signal });\n          const data = await response.json();\n          setData(data);\n          setLoading(false);\n        } catch (error) {\n          if (error.name === 'AbortError') {\n            console.log('Fetch was aborted');\n          } else {\n            setError(error);\n          }\n          setLoading(false);\n        }\n      }\n\n      fetchData()\n  \n      return () => {\n        controller.abort();\n      };\n    }, [url]);\n  \n    return { data, loading, error };\n  }\n  \nexport default useFetch;"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAE9C,SAASC,QAAQ,CAACC,GAAG,EAAE;EAAA;EAEnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCU,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACpBL,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxCN,UAAU,CAAC,IAAI,CAAC;IAEhB,eAAeO,SAAS,GAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAG,EAAE;UAAEc,MAAM,EAAEL,UAAU,CAACK;QAAO,CAAC,CAAC;QAChE,MAAMb,IAAI,GAAG,MAAMW,QAAQ,CAACG,IAAI,EAAE;QAClCb,OAAO,CAACD,IAAI,CAAC;QACbG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACW,IAAI,KAAK,YAAY,EAAE;UAC/BT,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAClC,CAAC,MAAM;UACLF,QAAQ,CAACD,KAAK,CAAC;QACjB;QACAD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAO,SAAS,EAAE;IAEX,OAAO,MAAM;MACXF,UAAU,CAACQ,KAAK,EAAE;IACpB,CAAC;EACH,CAAC,EAAE,CAACjB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACjC;AAAC,GAnCMN,QAAQ;AAqCjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}