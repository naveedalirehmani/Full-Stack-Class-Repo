{"ast":null,"code":"var _jsxFileName = \"/home/xuba/Desktop/clone-code/fullStackClassRepo/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Layout from \"./components/layout.jsx\";\nimport NotFoundPage from \"./components/notfoundpage.jsx\";\nimport UserProfile from \"./components/userProfile.jsx\";\nimport MultipleRoutes from \"./routes\";\nimport Auth from \"./routes/auth\";\nimport \"./App.css\";\nimport { useStore } from \"./store/index.jsx\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  // here * is used to match all incoming urls, by doing this we can nest/group routes together.\n\n  //? you can nest multiple route in side a single route like this.\n  // <Route path=\"/*\">\n  //   <Route path=\"/one\" element={<One></One>}></Route>\n  //   <Route></Route>\n  //   <Route></Route>\n  // </Route>\n\n  //* there are two reason why we would do this. one to nest routes so that we can group related routes together and break our routes into multiple components, 2. so that we can add a prefix route and a common layout to a group of routes, here in this file we have nested routes for the first reason and in the route/index file we nest routes for the second reason.\n\n  const navigate = useNavigate();\n  const user = useStore().loggedInUser;\n  useEffect(() => {\n    if (!user.email) navigate(\"/login\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 27\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/userprofile\",\n            element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"routes/*\",\n          element: /*#__PURE__*/_jsxDEV(MultipleRoutes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"eTzyOtWvOmG50A5JL+hUcBsGlU4=\", false, function () {\n  return [useNavigate, useStore];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Routes","Route","useNavigate","Layout","NotFoundPage","UserProfile","MultipleRoutes","Auth","useStore","App","navigate","user","loggedInUser","email"],"sources":["/home/xuba/Desktop/clone-code/fullStackClassRepo/src/App.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Layout from \"./components/layout.jsx\";\nimport NotFoundPage from \"./components/notfoundpage.jsx\";\nimport UserProfile from \"./components/userProfile.jsx\";\nimport MultipleRoutes from \"./routes\";\nimport Auth from \"./routes/auth\";\nimport \"./App.css\";\nimport { useStore } from \"./store/index.jsx\";\n\nexport const App = () => {\n  // here * is used to match all incoming urls, by doing this we can nest/group routes together.\n\n  //? you can nest multiple route in side a single route like this.\n  // <Route path=\"/*\">\n  //   <Route path=\"/one\" element={<One></One>}></Route>\n  //   <Route></Route>\n  //   <Route></Route>\n  // </Route>\n\n  //* there are two reason why we would do this. one to nest routes so that we can group related routes together and break our routes into multiple components, 2. so that we can add a prefix route and a common layout to a group of routes, here in this file we have nested routes for the first reason and in the route/index file we nest routes for the second reason.\n\n  const navigate = useNavigate();\n\nconst user = useStore().loggedInUser\n  useEffect(() => {\n    if (!user.email) navigate(\"/login\");\n  }, []);\n\n  return (\n    <>\n      <div>\n        <Routes>\n          <Route path=\"/*\" element={<Auth></Auth>}></Route>\n\n          <Route element={<Layout></Layout>}>\n            <Route path=\"/userprofile\" element={<UserProfile></UserProfile>} />\n          </Route>\n\n          <Route\n            path=\"routes/*\"\n            element={<MultipleRoutes></MultipleRoutes>}\n          ></Route>\n\n          <Route path=\"/*\" element={<NotFoundPage></NotFoundPage>}></Route>\n        </Routes>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,cAAc,MAAM,UAAU;AACrC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,mBAAmB;AAAC;AAAA;AAE7C,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;EACvB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAEhC,MAAMS,IAAI,GAAGH,QAAQ,EAAE,CAACI,YAAY;EAClCb,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,IAAI,CAACE,KAAK,EAAEH,QAAQ,CAAC,QAAQ,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE;MAAA,uBACE,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,IAAI;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS,eAEjD,QAAC,KAAK;UAAC,OAAO,eAAE,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAW;UAAA,uBAChC,QAAC,KAAK;YAAC,IAAI,EAAC,cAAc;YAAC,OAAO,eAAE,QAAC,WAAW;cAAA;cAAA;cAAA;YAAA;UAAgB;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC7D,eAER,QAAC,KAAK;UACJ,IAAI,EAAC,UAAU;UACf,OAAO,eAAE,QAAC,cAAc;YAAA;YAAA;YAAA;UAAA;QAAmB;UAAA;UAAA;UAAA;QAAA,QACpC,eAET,QAAC,KAAK;UAAC,IAAI,EAAC,IAAI;UAAC,OAAO,eAAE,QAAC,YAAY;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAC1D;MAAA;MAAA;MAAA;IAAA;EACL,iBACL;AAEP,CAAC;AAAC,GAvCWD,GAAG;EAAA,QAYGP,WAAW,EAEjBM,QAAQ;AAAA;AAAA,KAdRC,GAAG;AAyChB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}