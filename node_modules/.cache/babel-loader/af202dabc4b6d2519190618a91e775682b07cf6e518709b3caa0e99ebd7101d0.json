{"ast":null,"code":"var _jsxFileName = \"/home/xuba/Desktop/clone-code/fullStackClassRepo/src/hooks/useState.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Code from \"../components/code.jsx\";\nimport RenderTodoList from \"./components/todo.jsx\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UseStateHook = () => {\n  _s();\n  const obj = useOutletContext();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [allTodos, setAllTodos] = useState([{\n    id: 0,\n    value: \"props passing test\",\n    completed: false\n  }]);\n  const changeInputValue = inputValue => {\n    setInputValue(inputValue);\n  };\n  const addTodo = e => {\n    e.preventDefault();\n    setAllTodos(preValue => {\n      return [...preValue, {\n        id: allTodos.length,\n        value: inputValue,\n        completed: false\n      }];\n    });\n    setInputValue(\"\");\n  };\n  const deleteTodo = index => {\n    const allNewTodos = allTodos.filter((_, i) => i !== index);\n    setAllTodos(allNewTodos);\n  };\n  const setComplete = index => {\n    const allNewTodos = allTodos.map((element, i) => {\n      if (i === index) {\n        element.completed = !element.completed;\n        return element;\n      }\n      return element;\n    });\n    setAllTodos(allNewTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UseStateHook\",\n      children: [\"useStateHook\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [obj.hello, \" : this was render with react-router-dom outlet context\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTodo,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => changeInputValue(e.target.value),\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"set todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(RenderTodoList, {\n          propsAllTodos: allTodos,\n          propsSetComplete: index => setComplete(index),\n          propsDeleteTodo: index => deleteTodo(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Code : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Code, {\n        value: `\n        import React, { useState } from \"react\";\n        import { useOutletContext } from \"react-router-dom\";\n        import RenderTodoList from \"./components/todo.jsx\";\n        \n        export const  UseStateHook = () => {\n          const obj = useOutletContext()\n        \n          const [inputValue, setInputValue] = useState(\"\");\n        \n          const [allTodos, setAllTodos] = useState([\n            {id:0,value:'props passing test',completed:false}\n          ]);\n        \n          const changeInputValue = (inputValue) => {\n            setInputValue(inputValue);\n          };\n        \n          const addTodo = (e) => {\n            e.preventDefault();\n            setAllTodos((preValue)=>{\n              return [...preValue, { id:allTodos.length, value: inputValue, completed: false }]\n            });\n            setInputValue('')\n          };\n        \n          const deleteTodo = (index) => {\n            const allNewTodos = allTodos.filter((_, i) => i !== index);\n            setAllTodos(allNewTodos);\n          };\n        \n          const setComplete = (index) => {\n            const allNewTodos = allTodos.map((element, i) => {\n              if (i === index) {\n                element.completed = !element.completed;\n                return element;\n              }\n              return element;\n            });\n            setAllTodos(allNewTodos);\n          };\n        \n          return (\n            <div className=\"UseStateHook\">\n        \n            useStateHook \n            <div>\n            {obj.hello} : this was render with react-router-dom outlet context\n            </div>\n                \n              <form onSubmit={addTodo}>\n                <input\n                  type=\"text\"\n                  onChange={(e) => changeInputValue(e.target.value)}\n                  value={inputValue}\n                />\n                <button type=\"submit\">set todo</button>\n              </form>\n        \n              <div>\n                <RenderTodoList propsAllTodos={allTodos} \n                propsSetComplete={(index)=>setComplete(index)}\n                propsDeleteTodo={(index)=>deleteTodo(index)}>\n                </RenderTodoList>\n              </div>\n                \n            </div>\n          );\n        }\n        \n        export default UseStateHook;\n      `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UseStateHook, \"wX+sLTS4cwfXUpdD/foq0jV9Xek=\", false, function () {\n  return [useOutletContext];\n});\n_c = UseStateHook;\nexport default UseStateHook;\nvar _c;\n$RefreshReg$(_c, \"UseStateHook\");","map":{"version":3,"names":["React","useState","useOutletContext","Code","RenderTodoList","UseStateHook","obj","inputValue","setInputValue","allTodos","setAllTodos","id","value","completed","changeInputValue","addTodo","e","preventDefault","preValue","length","deleteTodo","index","allNewTodos","filter","_","i","setComplete","map","element","hello","target"],"sources":["/home/xuba/Desktop/clone-code/fullStackClassRepo/src/hooks/useState.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Code from \"../components/code.jsx\";\nimport RenderTodoList from \"./components/todo.jsx\";\n\nexport const UseStateHook = () => {\n  const obj = useOutletContext();\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const [allTodos, setAllTodos] = useState([\n    { id: 0, value: \"props passing test\", completed: false },\n  ]);\n\n  const changeInputValue = (inputValue) => {\n    setInputValue(inputValue);\n  };\n\n  const addTodo = (e) => {\n    e.preventDefault();\n    setAllTodos((preValue) => {\n      return [\n        ...preValue,\n        { id: allTodos.length, value: inputValue, completed: false },\n      ];\n    });\n    setInputValue(\"\");\n  };\n\n  const deleteTodo = (index) => {\n    const allNewTodos = allTodos.filter((_, i) => i !== index);\n    setAllTodos(allNewTodos);\n  };\n\n  const setComplete = (index) => {\n    const allNewTodos = allTodos.map((element, i) => {\n      if (i === index) {\n        element.completed = !element.completed;\n        return element;\n      }\n      return element;\n    });\n    setAllTodos(allNewTodos);\n  };\n\n  return (\n    <>\n      <div className=\"UseStateHook\">\n        useStateHook\n        <div>\n          {obj.hello} : this was render with react-router-dom outlet context\n        </div>\n        <form onSubmit={addTodo}>\n          <input\n            type=\"text\"\n            onChange={(e) => changeInputValue(e.target.value)}\n            value={inputValue}\n          />\n          <button type=\"submit\">set todo</button>\n        </form>\n        <div>\n          <RenderTodoList\n            propsAllTodos={allTodos}\n            propsSetComplete={(index) => setComplete(index)}\n            propsDeleteTodo={(index) => deleteTodo(index)}\n          ></RenderTodoList>\n        </div>\n      </div>\n      <div>\n        <p>Code : </p>\n        <Code\n          value={`\n        import React, { useState } from \"react\";\n        import { useOutletContext } from \"react-router-dom\";\n        import RenderTodoList from \"./components/todo.jsx\";\n        \n        export const  UseStateHook = () => {\n          const obj = useOutletContext()\n        \n          const [inputValue, setInputValue] = useState(\"\");\n        \n          const [allTodos, setAllTodos] = useState([\n            {id:0,value:'props passing test',completed:false}\n          ]);\n        \n          const changeInputValue = (inputValue) => {\n            setInputValue(inputValue);\n          };\n        \n          const addTodo = (e) => {\n            e.preventDefault();\n            setAllTodos((preValue)=>{\n              return [...preValue, { id:allTodos.length, value: inputValue, completed: false }]\n            });\n            setInputValue('')\n          };\n        \n          const deleteTodo = (index) => {\n            const allNewTodos = allTodos.filter((_, i) => i !== index);\n            setAllTodos(allNewTodos);\n          };\n        \n          const setComplete = (index) => {\n            const allNewTodos = allTodos.map((element, i) => {\n              if (i === index) {\n                element.completed = !element.completed;\n                return element;\n              }\n              return element;\n            });\n            setAllTodos(allNewTodos);\n          };\n        \n          return (\n            <div className=\"UseStateHook\">\n        \n            useStateHook \n            <div>\n            {obj.hello} : this was render with react-router-dom outlet context\n            </div>\n                \n              <form onSubmit={addTodo}>\n                <input\n                  type=\"text\"\n                  onChange={(e) => changeInputValue(e.target.value)}\n                  value={inputValue}\n                />\n                <button type=\"submit\">set todo</button>\n              </form>\n        \n              <div>\n                <RenderTodoList propsAllTodos={allTodos} \n                propsSetComplete={(index)=>setComplete(index)}\n                propsDeleteTodo={(index)=>deleteTodo(index)}>\n                </RenderTodoList>\n              </div>\n                \n            </div>\n          );\n        }\n        \n        export default UseStateHook;\n      `}\n        ></Code>\n      </div>\n    </>\n  );\n};\n\nexport default UseStateHook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}